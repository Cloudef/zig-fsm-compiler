#pragma once

#include <stdbool.h>

enum TokenType {
 unknown,
	IL_Comment,
	IL_Literal,
	IL_Symbol,
	IL_WhiteSpace,
	KW_Access,
	KW_Action,
	KW_AlphType,
	KW_Break,
	KW_Call,
	KW_Char,
	KW_CurState,
	KW_Entry,
	KW_Eof,
	KW_Err,
	KW_Exec,
	KW_Export,
	KW_From,
	KW_GetKey,
	KW_Goto,
	KW_Hold,
	KW_Write,
	KW_Import,
	KW_Include,
	KW_InWhen,
	KW_Length,
	KW_Lerr,
	KW_Machine,
	KW_Nbreak,
	KW_Ncall,
	KW_Next,
	KW_NfaPostPop,
	KW_NfaPrePush,
	KW_Nret,
	KW_OutWhen,
	KW_PChar,
	KW_PostPop,
	KW_PrePush,
	KW_Range,
	KW_Ret,
	KW_TargState,
	KW_To,
	KW_Variable,
	KW_When,
	RE_Char,
	RE_Dash,
	RE_Dot,
	RE_Slash,
	RE_SqClose,
	RE_SqOpen,
	RE_SqOpenNeg,
	RE_Star,
	RE_Repeat,
	RE_Maybe,
	TK_AllCond,
	TK_AllEOF,
	TK_AllFromState,
	TK_AllGblError,
	TK_AllLocalError,
	TK_AllToState,
	TK_Arrow,
	TK_Equals,
	TK_BarEquals,
	TK_BarStar,
	TK_StarBar,
	TK_CloseColon,
	TK_ColonCondOpen,
	TK_ColonCondPlusOpen,
	TK_ColonCondStarOpen,
	TK_ColonEquals,
	TK_ColonGt,
	TK_ColonGtGt,
	TK_ColonNfaOpen,
	TK_ColonNoMaxOpen,
	TK_SemiColon,
	TK_DashDash,
	TK_DotDot,
	TK_DotDotIndep,
	TK_DoubleArrow,
	TK_FinalEOF,
	TK_FinalFromState,
	TK_FinalGblError,
	TK_FinalLocalError,
	TK_FinalToState,
	TK_Hex,
	TK_LeavingCond,
	TK_Literal,
	TK_LtColon,
	TK_Middle,
	TK_MiddleEOF,
	TK_MiddleFromState,
	TK_MiddleGblError,
	TK_MiddleLocalError,
	TK_MiddleToState,
	TK_NameSep,
	TK_NotFinalEOF,
	TK_NotFinalFromState,
	TK_NotFinalGblError,
	TK_NotFinalLocalError,
	TK_NotFinalToState,
	TK_NotStartEOF,
	TK_NotStartFromState,
	TK_NotStartGblError,
	TK_NotStartLocalError,
	TK_NotStartToState,
	TK_StarStar,
	TK_StartCond,
	TK_StartEOF,
	TK_StartFromState,
	TK_StartGblError,
	TK_StartLocalError,
	TK_StartToState,
	TK_SubstRef,
	TK_UInt,
	TK_Word,
	TK_CurlyOpen,
	TK_CurlyClose,
	TK_ParenOpen,
	TK_ParenClose,
	TK_Comma,
	TK_At,
	TK_Percent,
	TK_Dollar,
	TK_Gt,
	TK_Union,
	TK_Negation,
	TK_Dot,
};

struct Scanner {
 const char *input;
 int input_len;
 void (*token)(struct Scanner *scanner, enum TokenType type, const char *lit, bool is_char);
 void (*error)(struct Scanner *scanner, const char *msg);
 void *ptr;
};

 void scan(struct Scanner *scanner);
